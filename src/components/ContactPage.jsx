import React, { useState } from 'react';
import { motion } from 'framer-motion';
import Header from './Header';
import Footer from './Footer';
import '../styles/ContactPage.css';

const ContactPage = ({ onNavigate }) => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    subject: '',
    message: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitSuccess, setSubmitSuccess] = useState(false);

  const handleInputChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    
    // Simulate form submission
    setTimeout(() => {
      setIsSubmitting(false);
      setSubmitSuccess(true);
      
      // Reset form after success
      setTimeout(() => {
        setSubmitSuccess(false);
        setFormData({
          name: '',
          email: '',
          phone: '',
          subject: '',
          message: ''
        });
      }, 3000);
    }, 1500);
  };

  const contactInfo = [
    {
      emoji: 'üìç',
      title: 'ƒê·ªãa ch·ªâ c·ª≠a h√†ng',
      content: '123 ƒê∆∞·ªùng ABC, Qu·∫≠n XYZ, TP.HCM',
      link: null
    },
    {
      emoji: 'üìû',
      title: 'Hotline h·ªó tr·ª£',
      content: '0123 456 789',
      link: 'tel:0123456789'
    },
    {
      emoji: 'üìß',
      title: 'Email li√™n h·ªá',
      content: 'hello@dudustore.com',
      link: 'mailto:hello@dudustore.com'
    },
    {
      emoji: 'üïí',
      title: 'Gi·ªù l√†m vi·ªác',
      content: 'T2-T7: 8:00 - 22:00\nCN: 9:00 - 21:00',
      link: null
    }
  ];

  const socialLinks = [
    { emoji: 'üìò', name: 'Facebook', link: '#', color: '#4267B2' },
    { emoji: 'üì∑', name: 'Instagram', link: '#', color: '#E4405F' },
    { emoji: 'üì∫', name: 'YouTube', link: '#', color: '#FF0000' },
    { emoji: 'üéµ', name: 'TikTok', link: '#', color: '#000000' }
  ];

  const storeLocations = [
    {
      name: 'Dudu Store - Chi nh√°nh 1',
      address: '123 ƒê∆∞·ªùng ABC, Qu·∫≠n XYZ, TP.HCM',
      hours: 'T2-T7: 8:00 - 22:00, CN: 9:00 - 21:00',
      phone: '0123 456 789'
    },
    {
      name: 'Dudu Store - Chi nh√°nh 2',
      address: '456 ƒê∆∞·ªùng DEF, Qu·∫≠n UVW, TP.HCM',
      hours: 'T2-T7: 8:00 - 22:00, CN: 9:00 - 21:00',
      phone: '0987 654 321'
    }
  ];

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.5 }}
      className="contact-page"
    >
      <Header currentPage="contact" onNavigate={onNavigate} />
      
      <main className="contact-main">
        {/* Hero Section */}
        <section className="contact-hero">
          <div className="container">
            <motion.div
              className="contact-hero-content"
              initial={{ opacity: 0, y: 50 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
            >
              <h1>Li√™n h·ªá v·ªõi ch√∫ng t√¥i</h1>
              <p>Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng l·∫Øng nghe v√† h·ªó tr·ª£ b·∫°n!</p>
            </motion.div>
          </div>
        </section>

        {/* Contact Content */}
        <section className="contact-content">
          <div className="container">
            <div className="contact-layout">
              {/* Contact Info */}
              <motion.div
                className="contact-info-section"
                initial={{ opacity: 0, x: -50 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.8 }}
              >
                <h2>Th√¥ng tin li√™n h·ªá</h2>
                <p>H√£y li√™n h·ªá v·ªõi ch√∫ng t√¥i qua c√°c k√™nh sau:</p>
                
                <div className="contact-info-grid">
                  {contactInfo.map((info, index) => (
                    <motion.div
                      key={index}
                      className="contact-info-item"
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ duration: 0.6, delay: index * 0.1 }}
                      whileHover={{ scale: 1.02 }}
                    >
                      <div className="info-emoji">{info.emoji}</div>
                      <div className="info-content">
                        <h3>{info.title}</h3>
                        {info.link ? (
                          <a href={info.link} className="info-link">
                            {info.content}
                          </a>
                        ) : (
                          <p>{info.content}</p>
                        )}
                      </div>
                    </motion.div>
                  ))}
                </div>

                <div className="social-section">
                  <h3>Theo d√µi ch√∫ng t√¥i</h3>
                  <div className="social-links">
                    {socialLinks.map((social, index) => (
                      <motion.a
                        key={index}
                        href={social.link}
                        className="social-link"
                        style={{ '--social-color': social.color }}
                        whileHover={{ scale: 1.1, y: -3 }}
                        whileTap={{ scale: 0.9 }}
                      >
                        <span className="social-emoji">{social.emoji}</span>
                        <span className="social-name">{social.name}</span>
                      </motion.a>
                    ))}
                  </div>
                </div>
              </motion.div>

              {/* Contact Form */}
              <motion.div
                className="contact-form-section"
                initial={{ opacity: 0, x: 50 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.8, delay: 0.2 }}
              >
                <div className="form-container">
                  <h2>G·ª≠i tin nh·∫Øn</h2>
                  <p>ƒêi·ªÅn th√¥ng tin b√™n d∆∞·ªõi v√† ch√∫ng t√¥i s·∫Ω li√™n h·ªá l·∫°i v·ªõi b·∫°n s·ªõm nh·∫•t!</p>
                  
                  {submitSuccess ? (
                    <motion.div 
                      className="success-message"
                      initial={{ opacity: 0, scale: 0.8 }}
                      animate={{ opacity: 1, scale: 1 }}
                      transition={{ duration: 0.3 }}
                    >
                      <div className="success-icon">‚úÖ</div>
                      <h3>G·ª≠i tin nh·∫Øn th√†nh c√¥ng!</h3>
                      <p>C·∫£m ∆°n b·∫°n ƒë√£ li√™n h·ªá v·ªõi ch√∫ng t√¥i. Ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi trong th·ªùi gian s·ªõm nh·∫•t.</p>
                    </motion.div>
                  ) : (
                    <form onSubmit={handleSubmit} className="contact-form">
                      <div className="form-row">
                        <div className="form-group">
                          <label htmlFor="name">H·ªç v√† t√™n <span className="required">*</span></label>
                          <input
                            type="text"
                            id="name"
                            name="name"
                            value={formData.name}
                            onChange={handleInputChange}
                            required
                            placeholder="Nh·∫≠p h·ªç v√† t√™n c·ªßa b·∫°n"
                          />
                        </div>
                        <div className="form-group">
                          <label htmlFor="email">Email <span className="required">*</span></label>
                          <input
                            type="email"
                            id="email"
                            name="email"
                            value={formData.email}
                            onChange={handleInputChange}
                            required
                            placeholder="Nh·∫≠p email c·ªßa b·∫°n"
                          />
                        </div>
                      </div>

                      <div className="form-row">
                        <div className="form-group">
                          <label htmlFor="phone">S·ªë ƒëi·ªán tho·∫°i</label>
                          <input
                            type="tel"
                            id="phone"
                            name="phone"
                            value={formData.phone}
                            onChange={handleInputChange}
                            placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
                          />
                        </div>
                        <div className="form-group">
                          <label htmlFor="subject">Ch·ªß ƒë·ªÅ <span className="required">*</span></label>
                          <select
                            id="subject"
                            name="subject"
                            value={formData.subject}
                            onChange={handleInputChange}
                            required
                          >
                            <option value="">Ch·ªçn ch·ªß ƒë·ªÅ</option>
                            <option value="product">H·ªèi v·ªÅ s·∫£n ph·∫©m</option>
                            <option value="order">ƒê·∫∑t h√†ng</option>
                            <option value="support">H·ªó tr·ª£ k·ªπ thu·∫≠t</option>
                            <option value="partnership">H·ª£p t√°c</option>
                            <option value="other">Kh√°c</option>
                          </select>
                        </div>
                      </div>

                      <div className="form-group">
                        <label htmlFor="message">Tin nh·∫Øn <span className="required">*</span></label>
                        <textarea
                          id="message"
                          name="message"
                          value={formData.message}
                          onChange={handleInputChange}
                          required
                          rows="6"
                          placeholder="Nh·∫≠p tin nh·∫Øn c·ªßa b·∫°n..."
                        ></textarea>
                      </div>

                      <motion.button
                        type="submit"
                        className="submit-btn"
                        disabled={isSubmitting}
                        whileHover={{ scale: 1.02 }}
                        whileTap={{ scale: 0.98 }}
                      >
                        {isSubmitting ? (
                          <motion.span 
                            className="loading-spinner"
                            animate={{ rotate: 360 }}
                            transition={{ duration: 1, repeat: Infinity, ease: "linear" }}
                          >
                            üîÑ
                          </motion.span>
                        ) : (
                          <>
                            üì§ G·ª≠i tin nh·∫Øn
                          </>
                        )}
                      </motion.button>
                    </form>
                  )}
                </div>
              </motion.div>
            </div>
          </div>
        </section>

        {/* Store Locations */}
        <section className="store-locations">
          <div className="container">
            <motion.div
              className="section-header"
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.8 }}
            >
              <h2>H·ªá th·ªëng c·ª≠a h√†ng</h2>
              <p>Gh√© thƒÉm c·ª≠a h√†ng g·∫ßn nh·∫•t ƒë·ªÉ tr·∫£i nghi·ªám s·∫£n ph·∫©m</p>
            </motion.div>

            <div className="locations-grid">
              {storeLocations.map((location, index) => (
                <motion.div
                  key={index}
                  className="location-card"
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.6, delay: index * 0.2 }}
                  whileHover={{ y: -10 }}
                >
                  <div className="location-header">
                    <div className="location-emoji">üè¨</div>
                    <h3>{location.name}</h3>
                  </div>
                  <div className="location-details">
                    <div className="location-detail">
                      <span>üìç</span>
                      <p>{location.address}</p>
                    </div>
                    <div className="location-detail">
                      <span>üïí</span>
                      <p>{location.hours}</p>
                    </div>
                    <div className="location-detail">
                      <span>üìû</span>
                      <p>{location.phone}</p>
                    </div>
                  </div>
                  <motion.button
                    className="location-btn"
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                  >
                    üó∫Ô∏è Xem b·∫£n ƒë·ªì
                  </motion.button>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* FAQ Section */}
        <section className="faq-section">
          <div className="container">
            <motion.div
              className="section-header"
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.8 }}
            >
              <h2>C√¢u h·ªèi th∆∞·ªùng g·∫∑p</h2>
              <p>Nh·ªØng th·∫Øc m·∫Øc ph·ªï bi·∫øn v·ªÅ s·∫£n ph·∫©m v√† d·ªãch v·ª• c·ªßa ch√∫ng t√¥i</p>
            </motion.div>

            <div className="faq-grid">
              {[
                {
                  question: "Th·ªùi gian giao h√†ng m·∫•t bao l√¢u?",
                  answer: "Th·ªùi gian giao h√†ng th√¥ng th∆∞·ªùng t·ª´ 2-3 ng√†y l√†m vi·ªác ƒë·ªëi v·ªõi khu v·ª±c n·ªôi th√†nh v√† 3-5 ng√†y ƒë·ªëi v·ªõi khu v·ª±c ngo·∫°i th√†nh v√† c√°c t·ªânh th√†nh kh√°c."
                },
                {
                  question: "L√†m th·∫ø n√†o ƒë·ªÉ ƒë·ªïi tr·∫£ s·∫£n ph·∫©m?",
                  answer: "B·∫°n c√≥ th·ªÉ ƒë·ªïi tr·∫£ s·∫£n ph·∫©m trong v√≤ng 7 ng√†y k·ªÉ t·ª´ ng√†y nh·∫≠n h√†ng. S·∫£n ph·∫©m c·∫ßn gi·ªØ nguy√™n tem m√°c, h·ªôp ƒë·ª±ng v√† kh√¥ng c√≥ d·∫•u hi·ªáu ƒë√£ qua s·ª≠ d·ª•ng."
                },
                {
                  question: "C√≥ ch√≠nh s√°ch b·∫£o h√†nh kh√¥ng?",
                  answer: "T·∫•t c·∫£ s·∫£n ph·∫©m c·ªßa Dudu Store ƒë·ªÅu ƒë∆∞·ª£c b·∫£o h√†nh 12 th√°ng ƒë·ªëi v·ªõi c√°c l·ªói t·ª´ nh√† s·∫£n xu·∫•t. Vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i n·∫øu s·∫£n ph·∫©m g·∫∑p v·∫•n ƒë·ªÅ."
                },
                {
                  question: "C√≥ th·ªÉ thanh to√°n b·∫±ng nh·ªØng ph∆∞∆°ng th·ª©c n√†o?",
                  answer: "Ch√∫ng t√¥i ch·∫•p nh·∫≠n thanh to√°n qua chuy·ªÉn kho·∫£n ng√¢n h√†ng, v√≠ ƒëi·ªán t·ª≠ (MoMo, ZaloPay, VNPay), th·∫ª t√≠n d·ª•ng/ghi n·ª£ v√† thanh to√°n khi nh·∫≠n h√†ng (COD)."
                }
              ].map((faq, index) => (
                <motion.div
                  key={index}
                  className="faq-item"
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                >
                  <div className="faq-question">
                    <span className="question-icon">‚ùì</span>
                    <h3>{faq.question}</h3>
                  </div>
                  <div className="faq-answer">
                    <p>{faq.answer}</p>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section className="contact-cta">
          <div className="container">
            <motion.div
              className="cta-content"
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.8 }}
            >
              <h2>S·∫µn s√†ng kh√°m ph√°?</h2>
              <p>H√£y c√πng ch√∫ng t√¥i t·∫°o ra nh·ªØng kho·∫£nh kh·∫Øc vui v·∫ª v·ªõi b·ªô s∆∞u t·∫≠p squishy tuy·ªát v·ªùi!</p>
              <div className="cta-buttons">
                <motion.button
                  className="cta-primary"
                  onClick={() => onNavigate('products')}
                  whileHover={{ scale: 1.05, y: -2 }}
                  whileTap={{ scale: 0.95 }}
                >
                  üõçÔ∏è Xem s·∫£n ph·∫©m
                </motion.button>
                
                <motion.button
                  className="cta-secondary"
                  onClick={() => onNavigate('about')}
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  ‚ÑπÔ∏è V·ªÅ ch√∫ng t√¥i
                </motion.button>
              </div>
            </motion.div>
          </div>
        </section>
      </main>

      <Footer />
    </motion.div>
  );
};

export default ContactPage;